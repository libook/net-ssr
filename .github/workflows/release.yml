name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-linux:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install gcc-aarch64-linux-gnu
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -yq gcc-aarch64-linux-gnu

      - name: Build
        run: ./scripts/build.sh ${{ matrix.target }}

      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: net-ssr-${{ matrix.target }}.zip
          path: net-ssr-${{ matrix.target }}.zip

      - name: Upload deb artifact
        if: contains(matrix.target, '-gnu')
        uses: actions/upload-artifact@v4
        with:
          name: net-ssr-${{ matrix.target }}.deb
          path: net-ssr-${{ matrix.target }}.deb

  build-windows:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        run: rustup toolchain install stable --profile minimal

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Download and Extract Npcap SDK
        run: |
          $npcapSdkUrl = "https://npcap.com/dist/npcap-sdk-1.13.zip"
          $npcapSdkPath = "$env:USERPROFILE\\npcap-sdk.zip"
          Invoke-WebRequest -Uri $npcapSdkUrl -OutFile $npcapSdkPath
          Expand-Archive -Path $npcapSdkPath -DestinationPath "$env:USERPROFILE\\npcap-sdk"

      - name: List SDK Directory Contents
        run: Get-ChildItem -Path "$env:USERPROFILE\\npcap-sdk\\Lib" -Recurse

      - name: Set LIB environment variable for Packet.lib
        run: |
          $target = "${{ matrix.target }}"
          if ($target -eq "x86_64-pc-windows-msvc") {
            $sdkLibPath = "$env:USERPROFILE\\npcap-sdk\\Lib\\x64"
          } else {
            $sdkLibPath = "$env:USERPROFILE\\npcap-sdk\\Lib\\ARM64"
          }
          Write-Host "Setting LIB to $sdkLibPath"
          echo "LIB=$sdkLibPath" >> $env:GITHUB_ENV
          Write-Host "LIB is now set to: $sdkLibPath"

      - name: Print LIB Environment Variable
        run: echo $env:LIB

      - name: Build
        env:
          LIB: ${{ env.LIB }}
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Pack artifact
        if: matrix.os == 'windows-latest'
        env:
          TARGET_NAME: net-ssr-${{ matrix.target }}
        run: |
          New-Item -ItemType Directory -Path ${env:TARGET_NAME}
          Copy-Item -Path "target\${{ matrix.target }}\release\interrogator.exe" -Destination ${env:TARGET_NAME}
          Copy-Item -Path "target\${{ matrix.target }}\release\transponder.exe" -Destination ${env:TARGET_NAME}
          Copy-Item -Path "README.*", "LICENSE" -Destination ${env:TARGET_NAME}
          Compress-Archive -Path ${env:TARGET_NAME} -DestinationPath "${env:TARGET_NAME}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: net-ssr-${{ matrix.target }}.zip
          path: net-ssr-${{ matrix.target }}.zip

  build-musl:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            image: rust-musl-cross:x86_64-musl
          - target: aarch64-unknown-linux-musl
            image: rust-musl-cross:aarch64-musl
    container:
      image: docker://ghcr.io/rust-cross/${{ matrix.image }}
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: ./scripts/build.sh ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: net-ssr-${{ matrix.target }}.zip
          path: net-ssr-${{ matrix.target }}.zip

  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-musl]
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            net-ssr-*.zip
            net-ssr-*.deb
          generate_release_notes: true
